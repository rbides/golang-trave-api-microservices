services:
  db-travel:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres2024"
    ports:
      - "5432:5432"
    networks:
      - travel-net
    container_name: db-travel
  db-reservation:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres2024"
    ports:
      - "5433:5432"
    networks:
      - travel-net
    container_name: db-reservation
  db-users:
    image: postgres
    environment:
      POSTGRES_PASSWORD: "postgres2024"
    ports:
      - "5434:5432"
    networks:
      - travel-net
    container_name: db-users
  # run_migrations:
  #   build:
  #     context: .
  #   env_file: .env
  #   ports:
  #     - "8432:8432"
  #   depends_on: ['db']
  #   command: make migrate_up
  # orchestrator-api:
  #   build:
  #     context: .
  #   env_file: orchestrator-api/.env
  #   ports:
  #    - "8080:8080"
  #   networks:
  #     - travel-net
  #   command: go run orchestrator-api/cmd/main.go
  #   container_name: orchestrator-api
  travel-api:
    build:
      context: travel-api/.
    env_file: travel-api/.env
    ports:
     - "8081:8080"
    networks:
      - travel-net
    command: go run cmd/main.go
    container_name: travel-api
    depends_on:
      - db-travel
  reservation-api:
    build:
      context: reservation-api/.
    env_file: reservation-api/.env
    ports:
     - "8082:8080"
    networks:
      - travel-net
    command: go run cmd/main.go
    container_name: reservation-api
  users-api:
    build:
      context: users-api/.
    env_file: users-api/.env
    ports:
     - "8083:8080"
    networks:
      - travel-net
    command: go run cmd/main.go
    container_name: users-api
    depends_on:
      - db-users
  # payments-api:
  #   build:
  #     context: .
  #   env_file: payments-api.env
  #   ports:
  #    - "8084:8080"
  #   networks:
  #     - travel-net
  #   command: go run payments-api/cmd/main.go
  #   container_name: payments-api
networks:
  travel-net:
    driver: bridge
    name: travel-net